import os
import sys
import socket
import subprocess
import time

SSID = "karch_eeg_88005553535"
PASSWORD = "12345678"
ESP_IP = "192.168.4.1"
PORT = 8888


def scan_networks():
    """–°–∫–∞–Ω–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ Wi-Fi —Å–µ—Ç–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ SSID"""
    if sys.platform.startswith("linux"):
        result = subprocess.run(["nmcli", "-t", "-f", "SSID", "dev", "wifi"], capture_output=True, text=True)
        return [line.strip() for line in result.stdout.splitlines() if line.strip()]
    elif sys.platform.startswith("win"):
        result = subprocess.run(["netsh", "wlan", "show", "networks"], capture_output=True, text=True)
        networks = []
        for line in result.stdout.splitlines():
            if "SSID" in line:
                parts = line.split(":", 1)
                if len(parts) == 2:
                    networks.append(parts[1].strip())
        return networks
    else:
        print("Unsupported OS.")
        return []


def connect_to_wifi():
    """–ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ ESP Wi-Fi"""
    if sys.platform.startswith("linux"):
        print(f"üîç –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ {SSID}...")
        subprocess.run(["nmcli", "dev", "wifi", "connect", SSID, "password", PASSWORD])
    elif sys.platform.startswith("win"):
        print(f"‚öôÔ∏è –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ {SSID} (Windows)...")
        profile_xml = f"""
        <WLANProfile xmlns="http://www.microsoft.com/networking/WLAN/profile/v1">
            <name>{SSID}</name>
            <SSIDConfig>
                <SSID>
                    <name>{SSID}</name>
                </SSID>
            </SSIDConfig>
            <connectionType>ESS</connectionType>
            <connectionMode>manual</connectionMode>
            <MSM>
                <security>
                    <authEncryption>
                        <authentication>WPA2PSK</authentication>
                        <encryption>AES</encryption>
                        <useOneX>false</useOneX>
                    </authEncryption>
                    <sharedKey>
                        <keyType>passPhrase</keyType>
                        <protected>false</protected>
                        <keyMaterial>{PASSWORD}</keyMaterial>
                    </sharedKey>
                </security>
            </MSM>
        </WLANProfile>
        """.strip()

        with open(f"{SSID}.xml", "w") as f:
            f.write(profile_xml)

        subprocess.run(["netsh", "wlan", "add", "profile", f"filename={SSID}.xml", "user=all"], stdout=subprocess.DEVNULL)
        subprocess.run(["netsh", "wlan", "connect", f"name={SSID}"], stdout=subprocess.DEVNULL)
    else:
        print("‚ùå Unsupported OS.")
        return

    print("‚è≥ –û–∂–∏–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ç–∏...")
    for i in range(10):
        time.sleep(1)
        print(f"‚è±Ô∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è... ({i+1}/10)")
        if check_connected():
            print("‚úÖ Wi-Fi –ø–æ–¥–∫–ª—é—á–µ–Ω!")
            return
    print("‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —É–±–µ–¥–∏—Ç—å—Å—è –≤ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏. –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º...")


def check_connected():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–ª—É—á–µ–Ω –ª–∏ IP –æ—Ç ESP (–ø—Ä–æ–≤–µ—Ä–∫–∞ ping)"""
    try:
        if sys.platform.startswith("win"):
            result = subprocess.run(["ping", "-n", "1", ESP_IP], stdout=subprocess.DEVNULL)
        else:
            result = subprocess.run(["ping", "-c", "1", ESP_IP], stdout=subprocess.DEVNULL)
        return result.returncode == 0
    except Exception:
        return False


def connect_to_esp():
    """–ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ ESP –ø–æ TCP"""
    try:
        print(f"üîå –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ ESP32 –ø–æ –∞–¥—Ä–µ—Å—É {ESP_IP}:{PORT}...")
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.settimeout(5)
        s.connect((ESP_IP, PORT))
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å ESP32!")
        s.sendall(b"STATUS\n")
        data = s.recv(1024).decode("utf-8")
        print("–û—Ç–≤–µ—Ç ESP:", data)
        s.close()
    except Exception as e:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ ESP32:", e)


def main():
    print("=== ESP32 Auto-Connector ===")
    networks = scan_networks()

    if SSID in networks:
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ —Å–µ—Ç—å ESP32: {SSID}")
        connect_to_wifi()
        connect_to_esp()
    else:
        print(f"‚ùå –°–µ—Ç—å '{SSID}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–∏–±–ª–∏–∑–∏—Ç—å—Å—è –∫ ESP32 –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –µ—ë.")


if __name__ == "__main__":
    main()
